import bobo
from wsgiref.simple_server import make_server

@bobo.query('/')
def pong_game():
    return '''
    <html>
        <head>
            <title>Pong Game</title>
            <style>
                body {
                    display: flex;
                    justify-content: center;
                    align-items: center;
                    height: 100vh;
                    margin: 0;
                    background: #000;
                }
                canvas {
                    border: 1px solid white;
                }
            </style>
        </head>
        <body>
            <canvas id="pong" width="800" height="400"></canvas>
            <script>
                const canvas = document.getElementById("pong");
                const ctx = canvas.getContext("2d");

                const paddleWidth = 10, paddleHeight = 100;
                const player1 = { x: 0, y: canvas.height / 2 - paddleHeight / 2, width: paddleWidth, height: paddleHeight, dy: 0 };
                const player2 = { x: canvas.width - paddleWidth, y: canvas.height / 2 - paddleHeight / 2, width: paddleWidth, height: paddleHeight, dy: 0 };
                const ball = { x: canvas.width / 2, y: canvas.height / 2, radius: 10, speed: 5, dx: 5, dy: 5 };

                function draw() {
                    ctx.clearRect(0, 0, canvas.width, canvas.height);
                    // Draw paddles
                    ctx.fillStyle = "white";
                    ctx.fillRect(player1.x, player1.y, player1.width, player1.height);
                    ctx.fillRect(player2.x, player2.y, player2.width, player2.height);
                    // Draw ball
                    ctx.beginPath();
                    ctx.arc(ball.x, ball.y, ball.radius, 0, Math.PI * 2);
                    ctx.fill();
                    ctx.closePath();
                }

                function update() {
                    ball.x += ball.dx;
                    ball.y += ball.dy;

                    // Paddle movement
                    if (player1.dy < 0 && player1.y > 0) player1.y += player1.dy;
                    if (player1.dy > 0 && player1.y < canvas.height - player1.height) player1.y += player1.dy;
                    if (player2.dy < 0 && player2.y > 0) player2.y += player2.dy;
                    if (player2.dy > 0 && player2.y < canvas.height - player2.height) player2.y += player2.dy;

                    // Ball collision with top and bottom
                    if (ball.y + ball.radius >= canvas.height || ball.y - ball.radius <= 0) {
                        ball.dy *= -1;
                    }
                    // Ball collision with paddles
                    if (ball.x <= player1.x + player1.width && ball.y >= player1.y && ball.y <= player1.y + player1.height) {
                        ball.dx *= -1;
                    }
                    if (ball.x + ball.radius >= player2.x && ball.y >= player2.y && ball.y <= player2.y + player2.height) {
                        ball.dx *= -1;
                    }
                    // Reset ball if out of bounds
                    if (ball.x < 0 || ball.x > canvas.width) {
                        ball.x = canvas.width / 2;
                        ball.y = canvas.height / 2;
                        ball.dx = -ball.dx;
                    }
                }

                function gameLoop() {
                    draw();
                    update();
                    requestAnimationFrame(gameLoop);
                }

                window.addEventListener("keydown", function(event) {
                    // Player 1 controls (W/S keys)
                    if (event.key === "w") player1.dy = -10; // Move up
                    else if (event.key === "s") player1.dy = 10; // Move down

                    // Player 2 controls (Arrow keys)
                    if (event.key === "ArrowUp") player2.dy = -10; // Move up
                    else if (event.key === "ArrowDown") player2.dy = 10; // Move down
                });

                window.addEventListener("keyup", function(event) {
                    // Player 1 controls (W/S keys)
                    if (event.key === "w" || event.key === "s") player1.dy = 0;

                    // Player 2 controls (Arrow keys)
                    if (event.key === "ArrowUp" || event.key === "ArrowDown") player2.dy = 0;
                });

                gameLoop();
            </script>
        </body>
    </html>
    '''

if __name__ == '__main__':
    httpd = make_server('', 8080, bobo.Application(bobo_resources=__name__))
    print("Serving on port 8080...")
    print("http://localhost:8080")
    httpd.serve_forever()

